{"version":3,"sources":["components/InfoWorld/CovidKasusWorld.js","components/InfoWorld/CovidSembuhWorld.js","components/InfoWorld/CovidMeninggalDuniaWorld.js","components/InfoWorld/CovidPIE.js","components/InfoWorld/CovidCountry.js","components/InfoWorld/CovidHarian.js","context.js","page/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["CovidKasus","props","Card","className","color","CardBody","CardTitle","CardText","id","kasus","CovidSembuh","sembuh","CovidMeninggalDunia","meninggalDunia","CovidPIE","data","labels","datasets","label","backgroundColor","hoverBackgroundColor","CovidCountry","style","Table","responsive","undefined","negara","LoadTd","SIW","Object","keys","length","map","item","i","iso3","Button","value","name","onClick","CovidHarian","lbl","dtst","daily","forEach","provinceState","confirmed","push","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","urlContext","createContext","covidContext","Tampilan","Container","fluid","Row","Col","xs","sm","md","lg","xl","CardHeader","identitas","WIS","Dashboard","baseUrl","useContext","covidVirus","useState","url","covid","setCovid","path","idNegara","country","setCountry","setData","setDaily","useEffect","UpdateCovid","date","Date","waktu","getDate","getMonth","getFullYear","getstatusworld","axios","method","getcountry","gd","getdaily","all","then","spread","res","catch","err","setInterval","getworld","e","target","split","countries","recovered","deaths","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"4MAMe,SAASA,EAAWC,GACjC,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,wBAAwBC,MAAM,WAC5C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAW,0CACX,kBAACC,EAAA,EAAD,KACE,yBAAKJ,UAAU,cACb,0BAAMK,GAAG,SAASP,EAAMQ,OACxB,8CCRG,SAASC,EAAYT,GAClC,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,yBAAyBC,MAAM,WAC7C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAW,uCACX,kBAACC,EAAA,EAAD,KACE,yBAAKJ,UAAU,cACb,0BAAMK,GAAG,SAASP,EAAMU,QACxB,8CCRG,SAASC,EAAoBX,GAC1C,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,iCAAiCC,MAAM,UACrD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAW,gDACX,kBAACC,EAAA,EAAD,KACE,yBAAKJ,UAAU,cACb,0BAAMK,GAAG,SAASP,EAAMY,gBACxB,6C,YCXG,SAASC,EAASb,GAC/B,IAAMc,EAAK,CACTC,OAAO,CAAC,YAAY,SAAS,mBAC7BC,SAAS,CAAC,CACRC,MAAM,WACNH,KAAK,CAACd,EAAMQ,MAAMR,EAAMU,OAAOV,EAAMY,gBACrCM,gBAAgB,CAAC,OAAO,QAAQ,OAChCC,qBAAqB,CAAC,OAAO,QAAQ,UAGzC,OACE,kBAAC,IAAD,CAAKL,KAAMA,I,sBCPA,SAASM,EAAapB,GACnC,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,0BAA0BC,MAAM,QAC9C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAW,wBAAIH,UAAU,eAAd,WACX,yBAAKmB,MAAO,CAAC,aAAa,OAAO,aAAa,SAAS,OAAS,UAChE,kBAACf,EAAA,EAAD,KACE,kBAACgB,EAAA,EAAD,CAAOC,YAAU,EAACrB,UAAU,mBAERsB,IAAfxB,EAAMyB,OAAoB,kBAACC,EAAD,CAAQC,IAAK3B,EAAM2B,IAAKF,OAAQzB,EAAMyB,SAAW,UAU1F,SAASC,EAAO1B,GACd,OAAG4B,OAAOC,KAAK7B,EAAMyB,QAAQK,OAAO,EAElC,oCAEE9B,EAAMyB,OAAOM,KAAI,SAASC,EAAKC,GAC/B,YAAeT,IAAZQ,EAAKE,KAEJ,4BACE,4BACE,kBAACC,EAAA,EAAD,CAAQhC,MAAM,OAAOiC,MAAOJ,EAAKK,KAAK,IAAIL,EAAKE,KAAMI,QAAStC,EAAM2B,KAAMM,EAAE,EAA5E,IAAgFD,EAAKK,QAKpF,SAQX,4BACE,4BACE,kBAACF,EAAA,EAAD,CAAQhC,MAAM,QAAd,eC3CO,SAASoC,EAAYvC,GACpC,IAAIwC,EAAI,GAAGC,EAAK,GAEbb,OAAOC,KAAK7B,EAAM0C,OAAOZ,OAAO,GACjC9B,EAAM0C,MAAMC,SAAQ,SAACX,EAAKC,QACAT,IAArBQ,EAAKY,oBAA4CpB,IAAjBQ,EAAKa,YACtCL,EAAIM,KAAKd,EAAKY,eACdH,EAAKK,KAAKd,EAAKa,eAKnB,IAAI/B,EAAO,CACXC,OAAOyB,EACPxB,SAAU,CACR,CACEC,MAAO,QACPH,KAAK2B,EACLtC,MAAM,QACN4C,MAAM,EACNC,YAAa,GACb9B,gBAAiB,uBACjB+B,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,MAIpB,OACE,kBAAC7D,EAAA,EAAD,CAAMC,UAAU,wBAAwBC,MAAM,QAC5C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAW,wBAAIH,UAAU,eAAd,cACX,kBAACI,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMe,MAAO,CAAC,MAAQ,SAAUP,KAAMA,OClDhD,IAEaiD,EAAWC,wBAFd,kCAGCC,EAAaD,wBAAc,I,oDCqGtC,SAASE,EAASlE,GAChB,OACE,kBAACmE,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpC,kBAAC1E,EAAA,EAAD,CAAMC,UAAU,cAChB,kBAAC0E,EAAA,EAAD,KACE,kBAACvE,EAAA,EAAD,CAAWF,MAAM,WAAU,gEAAsCH,EAAM6E,YACvE,kBAAC1C,EAAA,EAAD,CAAQhC,MAAM,UAAUmC,QAAStC,EAAM8E,KAAvC,2BAEF,kBAAC1E,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KAEE,kBAAC+D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKpE,UAAU,OACX,kBAACH,EAAD,CAAYS,MAAOR,EAAMQ,SAG7B,kBAAC8D,EAAA,EAAD,CAAKpE,UAAU,OACb,kBAACW,EAAD,CAAUL,MAAOR,EAAMQ,MAAOE,OAAQV,EAAMU,OAAQE,eAAgBZ,EAAMY,mBAI9E,kBAACyD,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAKpE,UAAU,OACb,kBAACO,EAAD,CAAaC,OAAQV,EAAMU,UAG7B,kBAAC4D,EAAA,EAAD,CAAKpE,UAAU,OACb,kBAACS,EAAD,CAAqBC,eAAgBZ,EAAMY,uBASrD,kBAAC0D,EAAA,EAAD,KACA,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,MAEvC,kBAACvD,EAAD,CAAcO,IAAK3B,EAAM2B,IAAKF,OAAQzB,EAAMyB,WAI9C,kBAAC4C,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,MAEvC,kBAAC,EAAD,CAAgBjC,MAAO1C,EAAM0C,aAWtBqC,MAjJG,SAAC/E,GACjB,IAAIgF,EAAQC,qBAAWlB,GACnBmB,EAAWD,qBAAWhB,GAFC,EAGjBkB,mBAASH,GAAdI,EAHsB,sBAIND,mBAASD,GAJH,mBAItBG,EAJsB,KAIhBC,EAJgB,OAKFH,mBAAS,CAACI,KAAK,cAActE,MAAM,YAAYuE,SAAS,MAAM1E,KAAK,KALjE,mBAKtB2E,EALsB,KAKdC,EALc,OAMRP,mBAAS,IAND,mBAMtBrE,EANsB,KAMjB6E,EANiB,OAONR,mBAAS,IAPH,mBAOtBzC,EAPsB,KAOhBkD,EAPgB,KAwE3B,OAhEAC,qBAAU,WAKR,SAASC,IACP,IAAIC,EAAK,IAAIC,KACTC,EAAM,GAAD,OAAIF,EAAKG,UAAU,EAAnB,YAAwBH,EAAKI,WAA7B,YAA2CJ,EAAKK,eACrDC,EAAeC,IAAM,CACvBlB,IAAI,GAAD,OAAIA,GAAJ,OAAUK,EAAQF,MAAlB,OAAyBE,EAAQD,UACpCe,OAAO,QAELC,EAAWF,IAAM,CACnBlB,IAAI,GAAD,OAAIA,GAAJ,OAAUK,EAAQF,MACrBgB,OAAO,QAELE,EAAG,GAAD,OAAIrB,EAAJ,kBAAiBa,GACnBS,EAASJ,IAAM,CACjBlB,IAAI,GAAD,OAAIqB,GACPF,OAAO,QAETD,IAAMK,IAAI,CAACN,EAAeG,EAAWE,IAAWE,KAAKN,IAAMO,QAAO,WAAW,IAAD,uBAANC,EAAM,yBAANA,EAAM,gBAC1ExB,EAASwB,EAAI,GAAGhG,MAChB6E,EAAQmB,EAAI,GAAGhG,MACf8E,EAASkB,EAAI,GAAGhG,UACdiG,OAAM,SAAAC,GACR1B,EAAS,IACTK,EAAQ,IACRC,EAAS,OA1BbE,IACAmB,YAAYnB,EAAY,OA6BxB,CAACV,EAAIK,EAAQF,KAAKE,EAAQD,WAgCzB5D,OAAOC,KAAKwD,GAAOvD,OAAO,EAEvB,kBAACoC,EAAD,CAAUY,IAhChB,WACE,IAAIoC,EAASZ,IAAM,CACjBlB,IAAI,GAAD,OAAIA,GACPmB,OAAO,QAETD,IAAMK,IAAI,CAACO,IAAWN,KAAKN,IAAMO,QAAO,WACtCnB,EAAW,eAAID,EAAL,CAAa,MAAQ,WADiB,2BAANqB,EAAM,yBAANA,EAAM,gBAEhDxB,EAASwB,EAAI,GAAGhG,UACdiG,OAAM,SAAAC,GACR1B,EAAS,QAuBmB3D,IAnBhC,SAAmBwF,GACjB,IAAI5G,EAAG4G,EAAEC,OAAOhF,MAAMiF,MAAM,KACxBhB,EAAeC,IAAM,CACvBlB,IAAI,GAAD,OAAIA,GAAJ,OAAUK,EAAQF,MAAlB,OAAyBhF,EAAG,IAC/BgG,OAAO,QAETD,IAAMK,IAAI,CAACN,IAAiBO,KAAKN,IAAMO,QAAO,WAC5CnB,EAAW,eAAID,EAAL,CAAa,KAAO,GAAG,MAAQ,MACzCH,EAAS,IAF6C,2BAANwB,EAAM,yBAANA,EAAM,gBAGtDxB,EAASwB,EAAI,GAAGhG,MAChB4E,EAAW,eAAID,EAAL,CAAa,KAAOqB,EAAI,GAAGhG,KAAK,MAAQP,EAAG,UACnDwG,OAAM,SAAAC,GACR1B,EAAS,IACTI,EAAW,eAAID,EAAL,CAAa,KAAO,UAMc/C,WAAgBlB,IAARkB,EAAmBA,EAAM,GAAImC,UAAWY,EAAQxE,MAAOQ,YAA0BD,IAAjBV,EAAKwG,UAAuBxG,EAAKwG,UAAU,GAAI9G,WAA0BgB,IAAlB6D,EAAMxC,UAAuBwC,EAAMxC,UAAUT,MAAM,IAAK1B,YAA2Bc,IAAlB6D,EAAMkC,UAAuBlC,EAAMkC,UAAUnF,MAAM,IAAKxB,eAAiByE,EAAMmC,OAAQnC,EAAMmC,OAAOpF,MAAM,MAItV,kBAAC8B,EAAD,CAAUvC,IAAI,GAAGe,MAAM,GAAGjB,YAA0BD,IAAjBV,EAAKwG,UAAuBxG,EAAKwG,UAAU,GAAI9G,MAAM,IAAIE,OAAO,IAAIE,eAAe,OC1F7G6G,MAPf,WAEE,OACE,kBAAC,EAAD,OCMgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACL,kBAAC,EAAD,MACDC,SAASC,eAAe,SD4HrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzB,MAAK,SAAA0B,GACJA,EAAaC,gBAEdxB,OAAM,SAAAyB,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.c6b8bd75.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Card,CardTitle,CardText,CardBody\r\n } from 'reactstrap';\r\n\r\nexport default function CovidKasus(props) {\r\n  return (\r\n    <Card className=\"CovidKasus text-white\" color=\"primary\">\r\n      <CardBody>\r\n        <CardTitle><h5>Terdampak</h5></CardTitle>\r\n        <CardText>\r\n          <div className=\"text-white\">\r\n            <span id=\"value\">{props.kasus}</span>\r\n            <span>  Kasus </span>\r\n          </div>\r\n        </CardText>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Card,CardTitle,CardText,CardBody\r\n } from 'reactstrap';\r\n\r\nexport default function CovidSembuh(props) {\r\n  return (\r\n    <Card className=\"CovidSembuh text-white\" color=\"success\">\r\n      <CardBody>\r\n        <CardTitle><h5>Sembuh</h5></CardTitle>\r\n        <CardText>\r\n          <div className=\"text-white\">\r\n            <span id=\"value\">{props.sembuh}</span>\r\n            <span>  Orang </span>\r\n          </div>\r\n        </CardText>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Card,CardTitle,CardText,CardBody\r\n } from 'reactstrap';\r\n\r\nexport default function CovidMeninggalDunia(props) {\r\n  return (\r\n    <Card className=\"CovidMeninggalDunia text-white\" color=\"danger\">\r\n      <CardBody>\r\n        <CardTitle><h5>Meninggal Dunia</h5></CardTitle>\r\n        <CardText>\r\n          <div className=\"text-white\">\r\n            <span id=\"value\">{props.meninggalDunia}</span>\r\n            <span> Orang </span>\r\n          </div>\r\n        </CardText>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Pie} from \"react-chartjs-2\";\r\n\r\nexport default function CovidPIE(props){\r\n  const data={\r\n    labels:[\"Terdampak\",\"Sembuh\",\"Meninggal Dunia\"],\r\n    datasets:[{\r\n      label:\"Covid 19\",\r\n      data:[props.kasus,props.sembuh,props.meninggalDunia],\r\n      backgroundColor:[\"Blue\",\"Green\",\"Red\"],\r\n      hoverBackgroundColor:[\"Blue\",\"Green\",\"Red\"]\r\n    }]\r\n  };\r\n  return (\r\n    <Pie data={data} />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Card,CardTitle,CardText,CardBody,\r\n  Table,Button\r\n } from 'reactstrap';\r\n\r\nexport default function CovidCountry(props) {\r\n  return (\r\n    <Card className=\"CovidCountry text-white\" color=\"dark\">\r\n      <CardBody>\r\n        <CardTitle><h5 className=\"text-center\">Negara</h5></CardTitle>\r\n        <div style={{\"margin-top\":\"25px\",\"overflow-y\":\"scroll\",\"height\":\"250px\"}}>\r\n        <CardText>\r\n          <Table responsive className=\"text-white\">\r\n            {\r\n              (props.negara!==undefined)?<LoadTd SIW={props.SIW} negara={props.negara} />:null\r\n            }\r\n          </Table>\r\n        </CardText>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction LoadTd(props){\r\n  if(Object.keys(props.negara).length>0){\r\n  return (\r\n    <>\r\n    {\r\n      props.negara.map(function(item,i){\r\n      if(item.iso3!==undefined){\r\n        return (\r\n          <tr>\r\n            <td>\r\n              <Button color=\"info\" value={item.name+\"?\"+item.iso3} onClick={props.SIW}>{i+1}.{item.name}</Button>\r\n            </td>\r\n          </tr>\r\n        );\r\n      }else{\r\n        return null;\r\n      }\r\n      })\r\n    }\r\n    </>\r\n  );\r\n}else{\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <Button color=\"info\">Indonesia</Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\n}\r\n","import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Card,CardTitle,CardText,CardBody\r\n } from 'reactstrap';\r\n\r\nimport {Line} from \"react-chartjs-2\";\r\n\r\nexport default function CovidHarian(props) {\r\nlet lbl=[],dtst=[];\r\n\r\nif(Object.keys(props.daily).length>0){\r\n  props.daily.forEach((item,i)=>{\r\n    if(item.provinceState!==undefined&&item.confirmed!==undefined){\r\n      lbl.push(item.provinceState);\r\n      dtst.push(item.confirmed);\r\n    }\r\n  });\r\n}\r\n\r\n  let data = {\r\n  labels:lbl,\r\n  datasets: [\r\n    {\r\n      label: 'Daily',\r\n      data:dtst,\r\n      color:\"Black\",\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: 'rgba(75,192,192,0.4)',\r\n      borderColor: 'rgba(75,192,192,1)',\r\n      borderCapStyle: 'butt',\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: 'miter',\r\n      pointBorderColor: 'rgba(75,192,192,1)',\r\n      pointBackgroundColor: '#fff',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n    }\r\n  ]\r\n};\r\n  return (\r\n    <Card className=\"CovidHarian text-dark\" color=\"link\">\r\n      <CardBody>\r\n        <CardTitle><h5 className=\"text-center\">Statistik</h5></CardTitle>\r\n        <CardText>\r\n          <Line style={{\"color\":\"white\"}} data={data} />\r\n        </CardText>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import {createContext} from \"react\";\r\n\r\nconst url=\"https://covid19.mathdro.id/api\";\r\n\r\nexport const urlContext=createContext(url);\r\nexport let covidContext=createContext({});\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport CovidKasus from \"../components/InfoWorld/CovidKasusWorld\";\r\nimport CovidSembuh from \"../components/InfoWorld/CovidSembuhWorld\";\r\nimport CovidMeninggalDunia from \"../components/InfoWorld/CovidMeninggalDuniaWorld\";\r\nimport CovidPIE from \"../components/InfoWorld/CovidPIE\";\r\nimport CovidCountry from \"../components/InfoWorld/CovidCountry\";\r\nimport CovidStatistik from \"../components/InfoWorld/CovidHarian\";\r\n\r\n\r\nimport {urlContext,covidContext} from \"../context\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  Container,Row,Col,\r\n  Card,CardHeader,CardTitle,CardText,CardBody,\r\n  Button\r\n } from 'reactstrap';\r\n\r\n\r\nconst Dashboard = (props) => {\r\n  var baseUrl=useContext(urlContext);\r\n  let covidVirus=useContext(covidContext);\r\n  let [url]=useState(baseUrl);\r\n  let [covid,setCovid]=useState(covidVirus);\r\n  let [country,setCountry]=useState({path:\"/countries/\",label:\"Indonesia\",idNegara:\"IDN\",data:{}});\r\n  let [data,setData]=useState({});\r\n  let [daily,setDaily]=useState({});\r\n  useEffect(()=>{\r\n\r\n    UpdateCovid();\r\n    setInterval(UpdateCovid,60000);\r\n\r\n    function UpdateCovid() {\r\n      let date=new Date();\r\n      let waktu=`${date.getDate()-1}-${date.getMonth()}-${date.getFullYear()}`;\r\n      let getstatusworld=axios({\r\n        url:`${url}${country.path}${country.idNegara}`,\r\n        method:\"GET\"\r\n      });\r\n      let getcountry=axios({\r\n        url:`${url}${country.path}`,\r\n        method:\"GET\"\r\n      });\r\n      let gd=`${url}/daily/${waktu}`;\r\n      let getdaily=axios({\r\n        url:`${gd}`,\r\n        method:\"GET\"\r\n      });\r\n      axios.all([getstatusworld,getcountry,getdaily]).then(axios.spread((...res)=>{\r\n        setCovid(res[0].data);\r\n        setData(res[1].data);\r\n        setDaily(res[2].data);\r\n      })).catch(err=>{\r\n        setCovid({});\r\n        setData({});\r\n        setDaily({});\r\n      });\r\n    }\r\n\r\n  },[url,country.path,country.idNegara]);\r\n\r\n  function DataDunia() {\r\n    let getworld=axios({\r\n      url:`${url}`,\r\n      method:\"GET\"\r\n    });\r\n    axios.all([getworld]).then(axios.spread((...res)=>{\r\n      setCountry({...country,\"label\":\"Dunia\"});\r\n      setCovid(res[0].data);\r\n    })).catch(err=>{\r\n      setCovid({});\r\n    });\r\n  }\r\n\r\n  function DataWorld(e) {\r\n    let id=e.target.value.split(\"?\");\r\n    let getstatusworld=axios({\r\n      url:`${url}${country.path}${id[1]}`,\r\n      method:\"GET\"\r\n    });\r\n    axios.all([getstatusworld]).then(axios.spread((...res)=>{\r\n      setCountry({...country,\"data\":{},\"label\":\"\"});\r\n      setCovid({});\r\n      setCovid(res[0].data);\r\n      setCountry({...country,\"data\":res[0].data,\"label\":id[0]});\r\n    })).catch(err=>{\r\n      setCovid({});\r\n      setCountry({...country,\"data\":{}});\r\n    });\r\n  }\r\n\r\n  if(Object.keys(covid).length>0){\r\n    return (\r\n        <Tampilan WIS={DataDunia} SIW={DataWorld} daily={(daily!==undefined)?daily:\"\"} identitas={country.label} negara={(data.countries!==undefined)?data.countries:\"\"} kasus={(covid.confirmed!==undefined)?covid.confirmed.value:\"0\"} sembuh={(covid.recovered!==undefined)?covid.recovered.value:\"0\"} meninggalDunia={(covid.deaths)?covid.deaths.value:\"0\"} />\r\n    );\r\n  }else{\r\n    return (\r\n      <Tampilan SIW=\"\" daily=\"\" negara={(data.countries!==undefined)?data.countries:\"\"} kasus=\"0\" sembuh=\"0\" meninggalDunia=\"0\" />\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction Tampilan(props) {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col xs=\"12\" sm=\"10\" md=\"8\" lg=\"8\" xl=\"8\">\r\n          <Card className=\"CovidWorld\">\r\n          <CardHeader>\r\n            <CardTitle color=\"warning\"><h5>Informasi Kasus Covid 19 Seluruh {props.identitas}</h5></CardTitle>\r\n            <Button color=\"success\" onClick={props.WIS}>Show Information World</Button>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <CardText>\r\n\r\n              <Row>\r\n                <Col className=\"m-3\">\r\n                    <CovidKasus kasus={props.kasus} />\r\n                </Col>\r\n\r\n                <Col className=\"m-3\">\r\n                  <CovidPIE kasus={props.kasus} sembuh={props.sembuh} meninggalDunia={props.meninggalDunia} />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n\r\n                <Col className=\"m-3\">\r\n                  <CovidSembuh sembuh={props.sembuh} />\r\n                </Col>\r\n\r\n                <Col className=\"m-3\">\r\n                  <CovidMeninggalDunia meninggalDunia={props.meninggalDunia} />\r\n                </Col>\r\n              </Row>\r\n\r\n            </CardText>\r\n          </CardBody>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col>\r\n        <Row>\r\n          <Col xs=\"12\" sm=\"10\" md=\"12\" lg=\"8\" xl=\"11\">\r\n\r\n          <CovidCountry SIW={props.SIW} negara={props.negara} />\r\n\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n        <Col xs=\"12\" sm=\"10\" md=\"12\" lg=\"8\" xl=\"11\">\r\n\r\n        <CovidStatistik daily={props.daily} />\r\n\r\n        </Col>\r\n        </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\nimport Dashboard from \"./page/Dashboard\";\n\nfunction App() {\n\n  return (\n    <Dashboard />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}